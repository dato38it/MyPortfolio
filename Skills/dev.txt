Task:
Переведите шестнадцатеричное число 1AF2_16 в десятичную систему счисления.
Decision:
print(int('1AF2', 16))
Task:
Переведите двоичное число 111111_2 в десятичную систему счисления.
Decision:
print(int('111111', 2))
Task:
Переведите десятичное число 1000_10 в шестнадцатеричную систему счисления.
Decision:
print(hex(1000)[2:])
Task:
Переведите десятичное число 513_10 в двоичную систему 
Decision:
print(bin(513))
Task:
Создание собстенного модуля
Для выполнения данного задания:
Создайте файл my_calc.py,
В этом файле напишите функцию calc_sum, которая на вход принимает два целых числа и возвращает их сумму. Пропишите аннотации к переменным, а также докстринг для функции,
Загрузите файл во временное сессионное хранилище Google Colab
Импортируйте файл в ноутбук:
import my_calc
Воспользуйтесь вашей функцией для сложения двух чисел: 10 и 5
Выведите результат на экран
Decision:
$ touch my_calc.py
$ cat my_calc.py 
def calc_sum(oper1: int = 20, oper2: int = 30) -> int:
 """_summary_
This method returns sum of 2 input arguments
"""
total_sum = oper1 + oper2
return total_sum                                                                                                                
$ cat test.py            
import my_calc as mc
print(mc.calc_sum())
$ python3 test.py
50
Task:
функция type()
Decision:
>>> type(None)
<class 'NoneType'>
>>> type(True)
<class 'bool'>
>>> type(1)
<class 'int'>
>>> type([1, 5.3, False, 4])
<class 'list'>
>>> type((1, True, 3, 5+4j))
<class 'tuple'>
>>> type(range(5))
<class 'range'>
>>> type(bytearray([1,2,3]))
<class 'bytearray'>
>>> type(memoryview(bytearray('XYZ', 'utf-8')))
<class 'memoryview'>
>>> type({'a', 3, True})
<class 'set'>
>>> type(frozenset({1, 2, 3}))
<class 'frozenset'>
>>> type({'a' : 32})
<class 'dict'>
Task:
В чем отличие списка от кортежа?
Decision:
Список - изменяем, кортеж - нет
Task:
Как происходит процесс присваивания в Python?
Decision:
Данные связываются ссылками на объекты    
Task:
Типы исключений
Decision:
- TypeError: can only concatenate str (not "list") to str - если попытаемся сложить список со строкой или строку с множеством
- TypeError - если попытаемся вычесть число из строки
- FileNotFoundError: [Errno 2] No such file or directory: '1231231' - если попытаемся открыть несуществующий файл
- IndexError: list index out of range - если попытаемся обратится к несуществующему индексу у строки или у списка
- KeyError: 'b' - если попытаемся обратится к несуществующему ключу у словаря
- NameError - если попытаемся обратится к несуществующей переменной
- ZeroDivisionError - если попытаемся число поделить на 0
Task:
Какие виды структур алгоритмов различают?
Decision:
-Линейная
-Разветвленная
-Циклическая
Task:
Какие типы базовых операций различают?
Decision:
-Арифметические
-Операции сравнения
-Логические
Task:
Каким образом алгоритм сортировки по ведрам сортирует данные от меньшего к большему?
Decision:
Распределяет данные по небольшим контейнерам, сортирует эти контейнеры, а затем скрепляет по порядку
Task:
Каким образом алгоритм пузырьковой сортировки сортирует данные от большего к меньшему?
Decision:
Путем сравнения каждого индекса массива со следующим по порядку. Если значение на следующем индексе больше, меняет их местами
Task:
Зачем используются циклы в работе с массивами?
Decision:
Для эффективного перебора каждого индекса массива
Task:
функция len()
Decision:
Все символы строки подсчитываются
Task:
Инструменты VCS имеют два основных типа удаленной архитектуры
Decision:
-Централизованный
-Распределенный
Task:
Какие системы можно отнести к примерам централизованной модели архитектуры:
Decision:
-SVN
-CVS
Task:
Какие системы можно отнести к примерам распределенной модели архитектуры
Decision:
-GIT
-Mercurial